Mirage
======

Mirage is a tool within WeAudit designed to facilitate the comparison images generated by different AI models to detect biases.

Mirage was created to test the hypothesis of whether seeing images from multiple different models could aids users in spotting details they would have missed otherwise.

Primary Contact: Matheus Kunzler Maldaner | [mkunzlermaldaner@ufl.edu](mkunzlermaldaner@ufl.edu)

Github Repository (Private): [Mirage](https://github.com/matheusmaldaner/WeAudit-Mirage)

Features and Capabilities
-------------------------

- **Image Comparison**: Provides functionalities to compare multiple images side by side to identify differences and patterns.
- **Leaderboard Feature (SOON)**: Ranks models based on user feedback, taking inspiration from [Chatbot Arena](https://arxiv.org/abs/2403.04132) 
- **Anonymous Auditing (SOON)**: Model providers are often reluctant to share their models. By anonymizing their models and letting everyday users test them, providers can use the feedback to combat biases in their models.

Setting Up Mirage
-----------------

1. **Installation**: 

You first need access to the [Mirage](https://github.com/matheusmaldaner/WeAudit-Mirage) Github Repository, this can be done by contacting anyone in the WeAudit team. 

Once you have access to the [Mirage](https://github.com/matheusmaldaner/WeAudit-Mirage) Github Repository, follow the instructions in the README.

Usage Example
-------------

Auditors may use Mirage to quickly compare images generated from different text-to-image models with demographic prompts to assess bias.

Below is an example of the imageGeneration function used by Mirage.

.. code-block:: javascript

    // Example Mirage function call
    async function imageGeneration(prompt, modelName, modelVersion, n) {

        // Construct the body in the format expected by your Lambda function
        const requestBody = JSON.stringify({
            model_name: modelName,
            model_version_id: modelVersion,
            prompt: prompt,
            num: n
        });

        const response = await axios.post("https://vtsuohpeo0.execute-api.us-east-1.amazonaws.com/Prod/mirage", {
            body: requestBody
        }, {
            headers: {
                'Content-Type': 'application/json'
            }
        });

        // Retuns an array of generated images from Replicate
        return JSON.parse(response.data.body);

    }

